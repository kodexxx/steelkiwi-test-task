{"version":3,"sources":["config.js","components/RegistrationForm.js","components/LoginForm.js","App.js","serviceWorker.js","index.js"],"names":["config","RegistrationForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","nowFormLock","error","mode","e","_this2","setState","preventDefault","data","id","target","userid","value","password","queryString","keys","map","key","join","fetch","Config","method","body","headers","Content-type","then","resp","json","onGetToken","responce","token","catch","console","log","_this3","react_default","a","createElement","className","onSubmit","onRegistrationSubmit","htmlFor","type","placeholder","disabled","onClick","changeMode","style","height","width","role","Component","LoginForm","auth","onAuthSubmit","components_RegistrationForm","App","localtoken","localStorage","getItem","info","ping","updateInfo","Authorization","res","setItem","all","_this4","_this5","form","components_LoginForm","onPassToken","page","pingGoogle","id_type","logOut","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.391199b6.chunk.js","sourcesContent":["export default {\n    API_URL: '/api/'\n}","import React, { Component } from 'react';\n\nimport Config from '../config'\n\nclass RegistrationForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      nowFormLock: false,\n      error: null,\n      mode: 'auth'\n    }\n  }\n  onRegistrationSubmit(e) {\n    this.setState({ nowFormLock: true })\n    e.preventDefault()\n    let data = {}\n    data.id = e.target.userid.value\n    data.password = e.target.password.value\n\n    var queryString = Object.keys(data).map(key => key + '=' + data[key]).join('&');\n\n\n    fetch(Config.API_URL + 'signup', {\n      method: 'POST',\n      body: queryString,\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      }\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({ nowFormLock: false })\n        if (data.error != null) {\n          this.setState({ error: data.error })\n        }\n        else {\n          this.setState({ error: null })\n          this.props.onGetToken(data.responce.token)\n        }\n      })\n      .catch(e => {\n        this.setState({ error: e })\n        console.log(e)\n      })\n\n    return false\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"card mt-3\">\n          <div className=\"card-header\">\n            Регистрация\n          </div>\n          <div className=\"card-body\">\n            <form onSubmit={(e) => this.onRegistrationSubmit(e)}>\n              <div className=\"form-group\">\n                <label htmlFor=\"userid\">ID пользователя</label>\n                <input type=\"text\" className=\"form-control\" id=\"userid\" placeholder=\"Введите Ваш ID\"></input>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Пароль</label>\n                <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Введите Ваш пароль\"></input>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\" disabled={this.state.nowFormLock}>Регистрация</button>\n              <button className=\"btn btn-link\" onClick={() => this.props.changeMode('auth')}>Авторизация</button>\n              <div style={{ height: '40px' }} className=\"mt-3\">\n                {this.state.nowFormLock &&\n                  <div className=\"progress\">\n                    <div className=\"progress-bar progress-bar-striped progress-bar-animated\" style={{ width: '100%' }}></div>\n                  </div>}\n                {!this.state.nowFormLock && this.state.error != null &&\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.state.error}\n                  </div>\n                }\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n    \n  }\n}\n\nexport default RegistrationForm;\n","import React, { Component } from 'react';\n\nimport Config from '../config'\n\nimport RegistrationForm from './RegistrationForm'\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      nowFormLock: false,\n      error: null,\n      mode: 'auth'\n    }\n  }\n  onAuthSubmit(e) {\n    this.setState({ nowFormLock: true })\n    e.preventDefault()\n    let data = {}\n    data.id = e.target.userid.value\n    data.password = e.target.password.value\n\n    var queryString = Object.keys(data).map(key => key + '=' + data[key]).join('&');\n\n\n    fetch(Config.API_URL + 'signin', {\n      method: 'POST',\n      body: queryString,\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      }\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({ nowFormLock: false })\n        if (data.error != null) {\n          this.setState({ error: data.error })\n        }\n        else {\n          this.setState({ error: null })\n          this.props.onGetToken(data.responce)\n        }\n      })\n      .catch(e => {\n        this.setState({ error: e })\n        console.log(e)\n      })\n\n    return false\n  }\n  render() {\n    let auth = (\n      <div>\n        <div className=\"card mt-3\">\n          <div className=\"card-header\">\n            Авторизация\n          </div>\n          <div className=\"card-body\">\n            <form onSubmit={(e) => this.onAuthSubmit(e)}>\n              <div className=\"form-group\">\n                <label htmlFor=\"userid\">ID пользователя</label>\n                <input type=\"text\" className=\"form-control\" id=\"userid\" placeholder=\"Введите Ваш ID\"></input>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Пароль</label>\n                <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Введите Ваш пароль\"></input>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\" disabled={this.state.nowFormLock}>Ввойти</button>\n              <button className=\"btn btn-link\" onClick={() => this.setState({ mode: 'reg' })}>Регистрация</button>\n              <div style={{ height: '40px' }} className=\"mt-3\">\n                {this.state.nowFormLock &&\n                  <div className=\"progress\">\n                    <div className=\"progress-bar progress-bar-striped progress-bar-animated\" style={{ width: '100%' }}></div>\n                  </div>}\n                {!this.state.nowFormLock && this.state.error != null &&\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.state.error}\n                  </div>\n                }\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n    return (this.state.mode === 'auth' ? auth : (<RegistrationForm onGetToken={(token) => this.props.onGetToken(token)} changeMode={(type) => this.setState({mode: type})}></RegistrationForm>))\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react'\nimport './App.css'\nimport LoginForm from './components/LoginForm'\nimport Config from './config'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    let localtoken = localStorage.getItem('token')\n    if (localtoken === 'null') localtoken = null\n    this.state = {\n      token: localtoken,\n      info: {},\n      ping: 0\n    }\n    console.log(this.state.token)\n    this.updateInfo()\n  }\n  updateInfo() {\n    fetch(Config.API_URL + 'info', {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.token, \n      }\n    })\n    .then(res => res.json())\n    .then(json => {\n      console.log(json)\n      if (json.error == null) {\n        this.setState({info: json.responce})\n      }\n      else {\n        this.setState({token: null})\n        localStorage.setItem('token', null)  \n      }\n    })\n    .catch((e) => {\n      this.setState({token: null})\n      localStorage.setItem('token', null)\n    })\n  }\n  onPassToken(token) {\n    console.log('auth form, new token')\n    this.setState({ token: token })\n    localStorage.setItem('token', token)\n    this.updateInfo()\n  }\n  pingGoogle() {\n    fetch(Config.API_URL + 'latency', {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.token, \n      }\n    })\n    .then(res => res.json())\n    .then(json => {\n      console.log(json)\n      if (json.error == null) {\n        this.setState({ping: json.responce})\n      }\n      else {\n        this.setState({token: null})\n        localStorage.setItem('token', null)  \n      }\n    })\n    .catch((e) => {\n      this.setState({token: null})\n      localStorage.setItem('token', null)\n    })\n  }\n  logOut(all) {\n    if (all) all = 'true'\n    else all = 'false'\n    fetch(Config.API_URL + 'logout?all=' + all, {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.token, \n      }\n    })\n    .then(res => res.json())\n    .then(json => {\n      this.setState({token: null})\n      localStorage.setItem('token', null) \n    })\n    .catch((e) => {\n      this.setState({token: null})\n      localStorage.setItem('token', null)\n    })\n  }\n  render() {\n    let form = (<LoginForm onGetToken={(token) => this.onPassToken(token)}></LoginForm>)\n    let page = (\n      <div>\n        <div className=\"card mt-3\">\n          <div className=\"card-header\">\n            ping google.com\n          </div>\n          <div className=\"card-body text-center\">\n            <span>{this.state.ping}</span><br></br>\n            <button className=\"btn btn-primary\" onClick={() => this.pingGoogle()}>ping</button>\n          </div>\n        </div>\n        <div className=\"card mt-3\">\n          <div className=\"card-header\">\n            О пользователе\n          </div>\n          <div className=\"card-body\">\n            <b>ID: </b><span>{this.state.info.id}</span>\n            <br></br>\n            <b>Тип ID: </b><span>{this.state.info.id_type}</span>\n          </div>\n        </div>\n        <div className=\"card mt-3\">\n          <div className=\"card-header\">\n            Авторизация\n          </div>\n          <div className=\"card-body text-center\">\n            <button className=\"btn btn-primary\" onClick={() => this.logOut(false)}>Выйти</button>\n            <br></br>\n            <button className=\"btn btn-primary mt-3\" onClick={() => this.logOut(true)}>Выйти со всех устройств</button>\n          </div>\n        </div>\n      </div>\n    )\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-4\"></div>\n            <div className=\"col-lg-4 col-sm-12\">\n              {this.state.token == null ? form : page}\n            </div>\n            <div className=\"col-lg-4\"></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}